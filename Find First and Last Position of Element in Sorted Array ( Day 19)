import java.util.*;

class Solution {

    public int findLeftSide(int []nums,int target){
        int index = -1,low = 0,high = nums.length-1;

        while(low <= high){
            int mid = (low + high)/2;

            if(nums[mid] == target){
                index = mid;
                high = mid-1;
            }
            else if(nums[mid] < target){
                low = mid+1;
            }
            else{
                high = mid-1;
            }
        }
        return index;
    }

    public int findRightSide(int []nums,int target){
        int index = -1,low = 0,high = nums.length-1;

        while(low <= high){
            int mid = (low + high)/2;

            if(nums[mid] == target){
                index = mid;
                low = mid+1;
            }
            else if(nums[mid] < target){
                low = mid+1;
            }
            else{
                high = mid-1;
            }
        }
        return index;
    }

    public int[] searchRange(int[] nums, int target) {
        
    int Left =  findLeftSide(nums,target);
    int Right =  findRightSide(nums,target);

    return new int[]{Left,Right};
     
    }
}
